// ==================
// Accordion 
// ==================

.accordion__wrapper {
  @extend %flex--column;
  width: 100%;
  margin: 0;
}

// Accordion Base Styles //

.accordion,
.accordion--panel {
  position: relative;
  overflow: hidden;

  &:last-of-type {
    padding-bottom: 0;
  }

  &:first-of-type {
    margin-top: 0;
  }

  i {
    @include transform(translate(-6px, 0));
    position: absolute;
    right: 10px;
    margin-top: 19px;
    z-index: 1;

    &:before,
    &:after {
      position: absolute;
      content: "";
      background-color: $black;
      width: 3px;
      height: 9px;
    }

    &:before {
      @include transform(translate(-2px, 0) rotate(45deg));
      @include transition(all, 1s, ease);
    }

    &:after {
      @include transform(translate(2px, 0) rotate(-45deg));
      @include transition(all, 1s, ease);
    }
  }

  .transition,
  i:before, 
  i:after {
    @include transition(all, 1s, ease);
  }

  &.behavior {
    i,
    .accordion__toggle {
      display: none;
    }
  }

  .accordion__toggle {
    position: absolute;
    cursor: pointer;
    width: 100%;
    height: 40px;
    z-index: 2;
    opacity: 0;

    &:checked ~ .accordion__container {
      margin: 0;
      max-height: 800px;
      opacity: 1;
      display: flex;
      padding: 10px;
    }

    &:checked ~ i:before {
      @include transform(translate(2px, 0) rotate(45deg));
    }

    &:checked ~ i:after {
      @include transform(translate(-2px, 0) rotate(-45deg));
    }
  }

  &.accordion--open {

    i:before,
    i:after {
      @include transition(all, 1s, ease);
    }

    i:before {
      @include transform(translate(-2px, 0) rotate(-45deg));
    }

    i:after {
      @include transform(translate(2px, 0) rotate(45deg));
    }

    .accordion__toggle {

      &:checked ~ .accordion__container {
        @include transform(translate(0, 50%));
        margin-top: 0;
        max-height: 0;
        opacity: 0;
      }
      
      &:checked ~ i:before {
        @include transform(translate(2px, 0) rotate(-45deg));
      }

      &:checked ~ i:after {
        @include transform(translate(-2px, 0) rotate(45deg));
      }
    }
  }

  .accordion__title {
    @extend %flex;
    @include text($weight: bold);
    position: relative;
    flex-wrap: wrap;
    justify-content: flex-start;
    margin: 0;
    cursor: pointer;
    user-select: none;
    padding: 10px 30px 10px 10px;
    color: $lego-gray-5;

    &--secondary {
      @include text(.8em, $weight: normal);
      padding: 0px 5px;
    }
  }

  .accordion__container {
    @extend %flex--column;
    @include text($color: $lego-gray-5, $weight: 100);
    @include transition(all, 1s, ease);
    position: relative;
    overflow: hidden;
    padding: 10px;
    margin: 0;
    max-height: 0;
    opacity: 0;
    display: none;

    &--open {
      margin: 0;
      max-height: 800px;
      opacity: 1;
    }
  }
}

.accordion--panel {
  margin: 5px 0 0 0;
  border: 1px solid transparent;
  border-color: $lego-gray-2;
  border-radius: 4px;

  .accordion__title {
    background-color: $lego-gray-1;
    border-color: $lego-gray-2;
    border-bottom: 0;
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
  }

  .accordion__container {
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    background-color: $white;
  }
}

$skins: 
  'blue' $lego-primary,
  'green' $lego-success,
  'red' $lego-danger,
  'orange' $lego-warning, 
  'gray' $lego-gray-3
;

.accordion,
.accordion--panel {

  @each $name, $color in $skins {
    &.skin-#{$name} {
      border-color: #{$color};
      
      .accordion__title {
        color: $white;
        background-color: transparent;
        border-color: transparent;
      }

      i:before,
      i:after {
        background-color: $white;
      }

      .accordion__container {
        background-color: $white;
      }
    }
  }
}
